Webアプリケーションにおけるテストについて


■ 概要

現在、クラウドなどの普及により、今までデスクトップアプリケーションとして作成されていたものも、Webアプリケーションとして作成されることが増えています。

一口にWebアプリケーションといっても、各種OSやブラウザの種類、バージョンが存在します。
さらに、スマートフォンの普及により、androidやiPhone上でのWebアプリケーションの対応も必要になることが多くなっています。

デスクトップアプリケーションの場合は、対象OSなどを限定して、その環境のみでテストをすれば十分でしたが、Webアプリケーションの場合には上記のようにいろいろな組合せでテストを行わなければいけません。

しかし現状では、PCLを作成して手動で代表的な組み合わせのテストを行うことが一般的で、全ての組み合わせのテストや回帰テストなども完全には行えないことがほとんどと思います。
PCLも作成しないで、適当にテスタのセンスで動作確認するケースも多いのでは？）


理想

PCLを作成し、全ての組み合わせについてのテストを行う。
改修などがあった場合は、今までのすべてのPCLについて同様にテストを行う。

→テストの実施に非常に工数がかかってしまう。
全てのテスト環境を構築、メンテすることも大変。

現実
リリーステストをテスタのセンスに任せる場合
→デグレードの可能性あり。再現性の少ない障害が発生する恐れがある。エビデンスがない。


※理想と現実のギャップを埋めるためのテストシステムです。


■ システム

ユーザクライアント Windows XP,7
UI
・Excel (2003)
実処理
・Java 1.6
・Rhino 1.7R4
・Selenium 2.28

サーバ
・Selenium 2.28
・Linuxなど

テストクライアント
OSは各種WindowsやMac,android,iPhoneなど
ブラウザはIE,Firefox,chrome,opera,safariなど
Selenium 2.0が対応していればどんなものでもOK


■ テスト手順

以下、excelにて実施します。

1. Webアプリの画面の構成を記述する。
→ ブラウザで実行しながら、HTMLのIDやXPathなどを元に、要素に名前を付ける。
2. テスト手順を記述する。
→ 簡単なコマンドで動作を記述する。
3. テスト対象ブラウザを選択。
4. 「実行」ボタン押下

以上の操作で、各種環境下で同一のテストを実施し、テスト結果やサマリが取得できます。


■ 課題

・エクセルの印刷、見栄えについて
→ 現状そこまで拘って作り込んでいません。
・テストデータ作成について
→ 画面構成要素のIDを拾ったりするのが手作業になります。テスト項目作成も手作業で試行錯誤が必要になります。
・エクセル上での実行時の処理について
→ 非同期通信が完全にはできていません。

■ 今後の展開について

Selenium2.0はクラウドでも実行することができます。
なので、RADでサーバと実行環境を構築し、そちらを販売するのはどうでしょうか？

今回構築したシステムは客先で作成しているのと、OSSを多数利用しているため、そのままでは販売は難しいと思います。
なので、テスト環境を販売し、これらのソフトはフリーとして配布する形にすれば問題は少くなるとおもいます。

1. 社内にSeleniumの環境を構築。
2. 社員でシステムを利用する。
→ 派遣先などでも、作業中は無料で利用できるようにし、普及させる。
3. もし、契約がきれた場合は、テストシステムのみ契約してもらう。
→ システム的なメンテナンスやサポートなどの契約。新しいテストケースの作成などはしない。

■ 競合製品について

・Selenium 2.0
テストの中核であるがフリー。
但し、日本での情報は非常にすくない。
・Selenium 1.0
旧バージョン
Firefoxのアドオンでレコーディングも可能。
しかし、細かな制御ができない。不安定（らしい）

クラウド環境
・sauceLABS
http://www.storklab.com/products/saucelabs/index.html
Selenium 1,2をクラウドで提供している商用サービス
テストの実施はできるが、スクリプトは自分で作成しなければならない。


